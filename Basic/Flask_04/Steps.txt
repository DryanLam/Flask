# Cool
if a and b and c:
user = [user for user in users if user['username'] = username]


# Nominate static & template folder
app = Flask(__name__,static_folder='../static', template_folder='../templates')

#https://www.youtube.com/watch?v=vA0cplXCx7Q&list=PLzEEDSVPTnycer033DPRTSgHYC1eCsVVS&index=21&t=0s
>> View & Blueprint
>> __init__.py to point this folder is package


# Navigate to folder containing main.py
>> pip3 install flask
>> pip3 install redis

>> pip3 install pipenv

# For excel workbook
>> pipenv install openpyxl

# For log
>> pipenv install lutils

# MySQL
pip install sqlalchemy


>> export FLASK_APP=main.py

>> flask run 

>> flask run -p 3000


# Create 'static' folder.
>> This is convention for css & js

# Create 'templates' folder
>> This is convention for html & layout

# Jinja 2
jinja.pocoo.org
flexible and follow django
Syntax:
{%	%}	: command: goto, for, call, if, ...
{{	}}	: print value out
{#	#}	: comment
#	##	: direct single command

# escape
>> {% raw %} escape_character {% raw %}


# Session
>> To create session you have to sign key

# Virtual env
>> Create internal env at prj in .virtual folder
pipenv --python 3.7

>> Launch env
pipenv shell

>> Install lib
pipenv install flask

>> Run with internal env
pipenv run ./filename.py

OR

pipenv shell
python ./filename.py

>> Export lib list file
pipenv lock -r >> req.ltd

>> Install lib list file to prepare env
pipenv install -r req.ltd

>> Uninstall liblist file
pipenv uninstall -r req.ltd

>> CLean pipfile package
pipenv clean


python3 -m pipenv install requests

#run.bat
pipenv lock --clear && SET FLASK_APP=main.py && SET FLASK_ENV=development && pipenv run flask run -p 3000 


# MySQL
choosing PyMysql is a no brainer because it is a simple pip install with no dependencies, while MySQLDb requires mysql development header files to be installed for your OS platform for it to work. Sqlalchemy doesn't factor into this because it still needs to wrap around a module that can talk to mysql like PyMysql, MySQLDb, CyMySQL e.t.c.

peewee and sqlalchemly don't implement their own db connector, they provide a layer above MySQLdb etc

# White docs sample
https://realpython.com/python-json/


RUN:
curl -i -X GET http://localhost:3000/hello

curl -i -H "Content-Type: application/x-www-form-urlencoded" -d "username=dunglam&password=1234" -X POST http://localhost:3000/api/login





